@model IEnumerable<Questioner.Models.Question>

@{
    ViewBag.Title = "Questioner";
}

<div class="jumbotron">
    <div class="row">
        <div class="pull-left">
            <h1>Questioner</h1>
            <p class="lead">A simple system for surveying a single question.</p>
        </div>
        <form>
            <div class="form-group pull-right">
                <h2 for="formGroupExampleInput">Your question</h2>
                <input type="text" class="form-control btnSize" id="formGroupExampleInput" placeholder="Enter your question">
                <div id="newQuestion" class="btn btn-info">Create new question &raquo;</div>
            </div>
        </form>
    </div>
</div>

<div class="container table-border">
    <div class="table-striped">
        <div class="row table-head">
            <div class="col-sm-6">
                <h4>Question</h4>
            </div>
            <div class="col-sm-3">
                <h4>Yes</h4>
            </div>
            <div class="col-sm-3">
                <h4>No</h4>
            </div>
        </div>

        @foreach (var item in Model)
        {
            <div class="row row-data">
                <div class="col-sm-6">
                    @Html.ActionLink(item.Question1, "Details", "Home", new { id = item.id }, null)
                </div>
                <div class="col-sm-3">
                    @Html.DisplayFor(modelItem => item.Yes)
                </div>
                <div class="col-sm-3">
                    @Html.DisplayFor(modelItem => item.No)
                </div>
            </div>
        }

    </div>
</div>


@section scripts {
<script>
    $(document).ready(function () {
        $("#newQuestion").click(function () {
            $.get("/api/Questions/" + $("#formGroupExampleInput").val())
                .success(function (data) {
                    location.reload(true);
                })
        })


    });
</script>
    }